definitions:
  entity.AnnounceWinnerRequest:
    properties:
      bid_id:
        type: string
      contractor_id:
        type: string
    type: object
  entity.Bid:
    properties:
      comments:
        type: string
      contractor_id:
        type: string
      delivery_time:
        type: integer
      id:
        type: string
      price:
        type: number
      status:
        type: string
      tender_id:
        type: string
    type: object
  entity.CreateBidRequest:
    properties:
      comments:
        type: string
      contractor_id:
        type: string
      delivery_time:
        type: integer
      price:
        type: number
      status:
        type: string
      tender_id:
        type: string
    type: object
  entity.CreateTenderRequest:
    properties:
      budget:
        type: number
      deadline:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
  entity.CreateUsrRequest:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  entity.GetBidsRequest:
    properties:
      contractor_id:
        type: string
      field:
        type: string
      value:
        type: string
    type: object
  entity.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entity.LoginResponse:
    properties:
      token:
        type: string
    type: object
  entity.Tender:
    properties:
      budget:
        type: number
      client_id:
        type: string
      created_at:
        type: string
      deadline:
        type: string
      description:
        type: string
      file_attachment:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  entity.UpdateBidRequest:
    properties:
      comments:
        type: string
      contractor_id:
        type: string
      price:
        type: number
      status:
        type: string
      tender_id:
        type: string
    type: object
  entity.UpdateTenderStatusRequest:
    properties:
      client_id:
        type: string
      id:
        type: string
      new_status:
        type: string
    type: object
  entity.User:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for a Tender  system.
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Log in a user with email and password
      parameters:
      - description: Login request body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/entity.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.LoginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: User login
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.CreateUsrRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - user
  /tender/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific tender by its ID
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete a tender by ID
      tags:
      - tender
  /tenders:
    get:
      consumes:
      - application/json
      description: Retrieve tenders for the authenticated client
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Tender'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - Bearer: []
      summary: Get tenders
      tags:
      - tenders
    post:
      consumes:
      - application/json
      description: Create a new tender and optionally upload a PDF
      parameters:
      - description: Tender data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.CreateTenderRequest'
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - Bearer: []
      summary: Create a new tender
      tags:
      - tenders
  /tenders/{id}:
    put:
      consumes:
      - application/json
      description: Update information of a specific Tender by its ID
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: string
      - description: Tender update request body
        in: body
        name: tender
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateTenderStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Tender'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update Tender
      tags:
      - product
  /tenders/{id}/bids:
    get:
      consumes:
      - application/json
      description: Get a list of bids for a specific tender
      parameters:
      - description: Get Bids request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.GetBidsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Bid'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Get all bids for a tender
      tags:
      - bid
    post:
      consumes:
      - application/json
      description: Create a new bid
      parameters:
      - description: Bid request body
        in: body
        name: bid
        required: true
        schema:
          $ref: '#/definitions/entity.CreateBidRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Bid'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Create a new bid
      tags:
      - bid
  /tenders/{id}/bids/{bid_id}:
    put:
      consumes:
      - application/json
      description: Update a bid with new information
      parameters:
      - description: Update Bid request body
        in: body
        name: bid
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateBidRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Bid'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update a bid
      tags:
      - bid
  /tenders/{id}/bids/winner:
    post:
      consumes:
      - application/json
      description: Announce the winner for a specific tender from the list of bids
      parameters:
      - description: Announce Winner request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.AnnounceWinnerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Bid'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Announce the winner for a tender
      tags:
      - bid
securityDefinitions:
  Bearer:
    description: Enter the token in the format `Bearer {token}`
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
